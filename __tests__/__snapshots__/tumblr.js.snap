// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tumblr 1 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  big={true}
  link="http://sharingbuttons.io"
  message="I am so cool"
  solidcircle={true}
>
  <ButtonFactory
    big={true}
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    message="I am so cool"
    name="Tumblr"
    solidcircle={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            message="I am so cool"
            solidcircle={true}
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              message="I am so cool"
              solidcircle={true}
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                  solidcircle={true}
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    solidcircle={true}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        enableBackground="new 0 0 24 24"
                        height="24px"
                        version="1.1"
                        viewBox="0 0 24 24"
                        width="24px"
                        x="0px"
                        xmlSpace="preserve"
                        y="0px"
                      >
                        <path
                          d="M12,0C5.383,0,0,5.383,0,12s5.383,12,12,12s12-5.383,12-12S18.617,0,12,0z M15.492,17.616C11.401,19.544,9.5,17,9.5,14.031 V9.5h-2V8.142c0.549-0.178,1.236-0.435,1.627-0.768c0.393-0.334,0.707-0.733,0.943-1.2c0.238-0.467,0.401-0.954,0.49-1.675H12.5v3h2 v2h-2v3.719c0,2.468,1.484,2.692,2.992,1.701V17.616z"
                        />
                      </svg>
                       
                      <span>
                        Share on Tumblr
                      </span>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 2 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  link="http://sharingbuttons.io"
  medium={true}
  message="I am so cool"
  solidcircle={true}
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    medium={true}
    message="I am so cool"
    name="Tumblr"
    solidcircle={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            message="I am so cool"
            solidcircle={true}
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              message="I am so cool"
              solidcircle={true}
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                  solidcircle={true}
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    solidcircle={true}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        enableBackground="new 0 0 24 24"
                        height="24px"
                        version="1.1"
                        viewBox="0 0 24 24"
                        width="24px"
                        x="0px"
                        xmlSpace="preserve"
                        y="0px"
                      >
                        <path
                          d="M12,0C5.383,0,0,5.383,0,12s5.383,12,12,12s12-5.383,12-12S18.617,0,12,0z M15.492,17.616C11.401,19.544,9.5,17,9.5,14.031 V9.5h-2V8.142c0.549-0.178,1.236-0.435,1.627-0.768c0.393-0.334,0.707-0.733,0.943-1.2c0.238-0.467,0.401-0.954,0.49-1.675H12.5v3h2 v2h-2v3.719c0,2.468,1.484,2.692,2.992,1.701V17.616z"
                        />
                      </svg>
                       
                      <span>
                        Tumblr
                      </span>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 3 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  link="http://sharingbuttons.io"
  message="I am so cool"
  small={true}
  solidcircle={true}
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    message="I am so cool"
    name="Tumblr"
    small={true}
    solidcircle={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            message="I am so cool"
            small={true}
            solidcircle={true}
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              message="I am so cool"
              small={true}
              solidcircle={true}
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                  solidcircle={true}
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    solidcircle={true}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        enableBackground="new 0 0 24 24"
                        height="24px"
                        version="1.1"
                        viewBox="0 0 24 24"
                        width="24px"
                        x="0px"
                        xmlSpace="preserve"
                        y="0px"
                      >
                        <path
                          d="M12,0C5.383,0,0,5.383,0,12s5.383,12,12,12s12-5.383,12-12S18.617,0,12,0z M15.492,17.616C11.401,19.544,9.5,17,9.5,14.031 V9.5h-2V8.142c0.549-0.178,1.236-0.435,1.627-0.768c0.393-0.334,0.707-0.733,0.943-1.2c0.238-0.467,0.401-0.954,0.49-1.675H12.5v3h2 v2h-2v3.719c0,2.468,1.484,2.692,2.992,1.701V17.616z"
                        />
                      </svg>
                       
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 4 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  big={true}
  circle={true}
  link="http://sharingbuttons.io"
  message="I am so cool"
>
  <ButtonFactory
    big={true}
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    circle={true}
    href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    message="I am so cool"
    name="Tumblr"
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            message="I am so cool"
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              message="I am so cool"
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        enableBackground="new 0 0 24 24"
                        height="24px"
                        version="1.1"
                        viewBox="0 0 24 24"
                        width="24px"
                        x="0px"
                        xmlSpace="preserve"
                        y="0px"
                      >
                        <path
                          d="M12,0C5.383,0,0,5.383,0,12s5.383,12,12,12s12-5.383,12-12S18.617,0,12,0z M15.492,17.616C11.401,19.544,9.5,17,9.5,14.031 V9.5h-2V8.142c0.549-0.178,1.236-0.435,1.627-0.768c0.393-0.334,0.707-0.733,0.943-1.2c0.238-0.467,0.401-0.954,0.49-1.675H12.5v3h2 v2h-2v3.719c0,2.468,1.484,2.692,2.992,1.701V17.616z"
                        />
                      </svg>
                       
                      <span>
                        Share on Tumblr
                      </span>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 5 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  circle={true}
  link="http://sharingbuttons.io"
  medium={true}
  message="I am so cool"
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    circle={true}
    href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    medium={true}
    message="I am so cool"
    name="Tumblr"
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            message="I am so cool"
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              message="I am so cool"
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        enableBackground="new 0 0 24 24"
                        height="24px"
                        version="1.1"
                        viewBox="0 0 24 24"
                        width="24px"
                        x="0px"
                        xmlSpace="preserve"
                        y="0px"
                      >
                        <path
                          d="M12,0C5.383,0,0,5.383,0,12s5.383,12,12,12s12-5.383,12-12S18.617,0,12,0z M15.492,17.616C11.401,19.544,9.5,17,9.5,14.031 V9.5h-2V8.142c0.549-0.178,1.236-0.435,1.627-0.768c0.393-0.334,0.707-0.733,0.943-1.2c0.238-0.467,0.401-0.954,0.49-1.675H12.5v3h2 v2h-2v3.719c0,2.468,1.484,2.692,2.992,1.701V17.616z"
                        />
                      </svg>
                       
                      <span>
                        Tumblr
                      </span>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 6 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  circle={true}
  link="http://sharingbuttons.io"
  message="I am so cool"
  small={true}
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    circle={true}
    href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    message="I am so cool"
    name="Tumblr"
    small={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            message="I am so cool"
            small={true}
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              message="I am so cool"
              small={true}
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        enableBackground="new 0 0 24 24"
                        height="24px"
                        version="1.1"
                        viewBox="0 0 24 24"
                        width="24px"
                        x="0px"
                        xmlSpace="preserve"
                        y="0px"
                      >
                        <path
                          d="M12,0C5.383,0,0,5.383,0,12s5.383,12,12,12s12-5.383,12-12S18.617,0,12,0z M15.492,17.616C11.401,19.544,9.5,17,9.5,14.031 V9.5h-2V8.142c0.549-0.178,1.236-0.435,1.627-0.768c0.393-0.334,0.707-0.733,0.943-1.2c0.238-0.467,0.401-0.954,0.49-1.675H12.5v3h2 v2h-2v3.719c0,2.468,1.484,2.692,2.992,1.701V17.616z"
                        />
                      </svg>
                       
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 7 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  big={true}
  link="http://sharingbuttons.io"
  message="I am so cool"
  solid={true}
>
  <ButtonFactory
    big={true}
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    message="I am so cool"
    name="Tumblr"
    solid={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            message="I am so cool"
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              message="I am so cool"
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                  solid={true}
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    solid={true}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M13.5.5v5h5v4h-5V15c0 5 3.5 4.4 6 2.8v4.4c-6.7 3.2-12 0-12-4.2V9.5h-3V6.7c1-.3 2.2-.7 3-1.3.5-.5 1-1.2 1.4-2 .3-.7.6-1.7.7-3h3.8z"
                        />
                      </svg>
                       
                      <span>
                        Share on Tumblr
                      </span>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 8 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  link="http://sharingbuttons.io"
  medium={true}
  message="I am so cool"
  solid={true}
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    medium={true}
    message="I am so cool"
    name="Tumblr"
    solid={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            message="I am so cool"
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              message="I am so cool"
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                  solid={true}
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    solid={true}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M13.5.5v5h5v4h-5V15c0 5 3.5 4.4 6 2.8v4.4c-6.7 3.2-12 0-12-4.2V9.5h-3V6.7c1-.3 2.2-.7 3-1.3.5-.5 1-1.2 1.4-2 .3-.7.6-1.7.7-3h3.8z"
                        />
                      </svg>
                       
                      <span>
                        Tumblr
                      </span>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 9 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  link="http://sharingbuttons.io"
  message="I am so cool"
  small={true}
  solid={true}
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    message="I am so cool"
    name="Tumblr"
    small={true}
    solid={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl=http%3A%2F%2Fsharingbuttons.io"
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            message="I am so cool"
            small={true}
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              message="I am so cool"
              small={true}
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                  solid={true}
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    solid={true}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M13.5.5v5h5v4h-5V15c0 5 3.5 4.4 6 2.8v4.4c-6.7 3.2-12 0-12-4.2V9.5h-3V6.7c1-.3 2.2-.7 3-1.3.5-.5 1-1.2 1.4-2 .3-.7.6-1.7.7-3h3.8z"
                        />
                      </svg>
                       
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 11 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  circle={true}
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    circle={true}
    href="http://tumblr.com/widgets/share/tool?canonicalUrl="
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    name="Tumblr"
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl="
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl="
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl="
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)>
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        enableBackground="new 0 0 24 24"
                        height="24px"
                        version="1.1"
                        viewBox="0 0 24 24"
                        width="24px"
                        x="0px"
                        xmlSpace="preserve"
                        y="0px"
                      >
                        <path
                          d="M12,0C5.383,0,0,5.383,0,12s5.383,12,12,12s12-5.383,12-12S18.617,0,12,0z M15.492,17.616C11.401,19.544,9.5,17,9.5,14.031 V9.5h-2V8.142c0.549-0.178,1.236-0.435,1.627-0.768c0.393-0.334,0.707-0.733,0.943-1.2c0.238-0.467,0.401-0.954,0.49-1.675H12.5v3h2 v2h-2v3.719c0,2.468,1.484,2.692,2.992,1.701V17.616z"
                        />
                      </svg>
                       
                      <span>
                        Tumblr
                      </span>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 11 2`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component
  solidcircle={true}
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl="
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    name="Tumblr"
    solidcircle={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl="
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl="
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl="
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)
            solidcircle={true}
          >
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              solidcircle={true}
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                  solidcircle={true}
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    solidcircle={true}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        enableBackground="new 0 0 24 24"
                        height="24px"
                        version="1.1"
                        viewBox="0 0 24 24"
                        width="24px"
                        x="0px"
                        xmlSpace="preserve"
                        y="0px"
                      >
                        <path
                          d="M12,0C5.383,0,0,5.383,0,12s5.383,12,12,12s12-5.383,12-12S18.617,0,12,0z M15.492,17.616C11.401,19.544,9.5,17,9.5,14.031 V9.5h-2V8.142c0.549-0.178,1.236-0.435,1.627-0.768c0.393-0.334,0.707-0.733,0.943-1.2c0.238-0.467,0.401-0.954,0.49-1.675H12.5v3h2 v2h-2v3.719c0,2.468,1.484,2.692,2.992,1.701V17.616z"
                        />
                      </svg>
                       
                      <span>
                        Tumblr
                      </span>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 12 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  fill: #fff;
  stroke: none;
  fill: #fff;
  stroke: none;
}

.c1 {
  border-radius: 5px;
  -webkit-transition: 25ms ease-out;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue,Helvetica,Arial,sans-serif;
  background-color: #35465c;
  border-color: #35465c;
}

.c1:hover,
.c1:active {
  background-color: #222d3c;
  border-color: #222d3c;
}

<Component>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl="
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    name="Tumblr"
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl="
      rel="noreferrer noopener"
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl="
        rel="noreferrer noopener"
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl="
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <Styled(styled.div)>
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
                      "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
                    ],
                  },
                  "displayName": "Styled(styled.div)",
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c1"
              >
                <styled.div
                  aria-hidden="true"
                  solid={true}
                >
                  <StyledComponent
                    aria-hidden="true"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htpNat",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "
  display: flex;
  align-items: center;
  fill: #fff;
  stroke: none;

  ",
                            [Function],
                            ";
",
                          ],
                        },
                        "displayName": "styled.div",
                        "render": [Function],
                        "styledComponentId": "sc-htpNat",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    solid={true}
                  >
                    <div
                      aria-hidden="true"
                      className="c2"
                    >
                      <svg
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M13.5.5v5h5v4h-5V15c0 5 3.5 4.4 6 2.8v4.4c-6.7 3.2-12 0-12-4.2V9.5h-3V6.7c1-.3 2.2-.7 3-1.3.5-.5 1-1.2 1.4-2 .3-.7.6-1.7.7-3h3.8z"
                        />
                      </svg>
                       
                      <span>
                        Tumblr
                      </span>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </Styled(styled.div)>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 13 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c0 svg {
  stroke: #232323;
  fill: none;
}

<Component
  simple={true}
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "dkGtst",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl="
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    name="Tumblr"
    simple={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl="
      rel="noreferrer noopener"
      simple={true}
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl="
        rel="noreferrer noopener"
        simple={true}
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl="
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <TumblrIconFill>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13.5.5v5h5v4h-5V15c0 5 3.5 4.4 6 2.8v4.4c-6.7 3.2-12 0-12-4.2V9.5h-3V6.7c1-.3 2.2-.7 3-1.3.5-.5 1-1.2 1.4-2 .3-.7.6-1.7.7-3h3.8z"
              />
            </svg>
          </TumblrIconFill>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;

exports[`Tumblr 14 1`] = `
.c0 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;
}

.c0 svg {
  width: 1em;
  height: 1em;
  vertical-align: top;
}

.c0 svg:not(:only-child) {
  margin-right: 0.4em;
}

.c0 svg {
  stroke: #fff;
  fill: none;
}

<Component
  simpleReverse={true}
>
  <ButtonFactory
    buttonComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": true,
          "lastClassName": "dkGtst",
          "rules": Array [
            "
  border-radius: 5px;
  transition: 25ms ease-out;
  padding: 0.5em 0.75em;
  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
",
            "
  background-color: #35465c;
  border-color: #35465c;

  &:hover,
  &:active {
    background-color: #222d3c;
    border-color: #222d3c;
  }
",
          ],
        },
        "displayName": "Styled(styled.div)",
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    href="http://tumblr.com/widgets/share/tool?canonicalUrl="
    iconCircle={[Function]}
    iconCircleSolid={[Function]}
    iconFill={[Function]}
    name="Tumblr"
    simpleReverse={true}
  >
    <styled.a
      aria-label="Share on Tumblr"
      href="http://tumblr.com/widgets/share/tool?canonicalUrl="
      rel="noreferrer noopener"
      simpleReverse={true}
      target="_blank"
      title="Share on Tumblr"
    >
      <StyledComponent
        aria-label="Share on Tumblr"
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  text-decoration: none;
  color: #fff;
  margin: 0.5em;
  display: inline-block;

  svg {
    width: 1em;
    height: 1em;
    vertical-align: top;

    &:not(:only-child) {
      margin-right: 0.4em;
    }
  }

  ",
                [Function],
                ";

  ",
                [Function],
                ";

  ",
                [Function],
                ";
",
              ],
            },
            "displayName": "styled.a",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "a",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        href="http://tumblr.com/widgets/share/tool?canonicalUrl="
        rel="noreferrer noopener"
        simpleReverse={true}
        target="_blank"
        title="Share on Tumblr"
      >
        <a
          aria-label="Share on Tumblr"
          className="c0"
          href="http://tumblr.com/widgets/share/tool?canonicalUrl="
          rel="noreferrer noopener"
          target="_blank"
          title="Share on Tumblr"
        >
          <TumblrIconFill>
            <svg
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M13.5.5v5h5v4h-5V15c0 5 3.5 4.4 6 2.8v4.4c-6.7 3.2-12 0-12-4.2V9.5h-3V6.7c1-.3 2.2-.7 3-1.3.5-.5 1-1.2 1.4-2 .3-.7.6-1.7.7-3h3.8z"
              />
            </svg>
          </TumblrIconFill>
        </a>
      </StyledComponent>
    </styled.a>
  </ButtonFactory>
</Component>
`;
